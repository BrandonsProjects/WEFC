<?xml version="1.0" encoding="UTF-8"?>
<Subscription xmlns="http://schemas.microsoft.com/2006/03/windows/events/subscription">
    <SubscriptionId>System</SubscriptionId>
    <SubscriptionType>SourceInitiated</SubscriptionType>
    <Description>Important User and Security Group Events from all Domain Computers and Domain Controllers</Description>
    <Enabled>true</Enabled>
    <Uri>http://schemas.microsoft.com/wbem/wsman/1/windows/EventLog</Uri>
    <ConfigurationMode>Custom</ConfigurationMode>
    <Delivery Mode="Push">
		<Batching>
			<MaxLatencyTime>1000</MaxLatencyTime>
		</Batching>
		<PushSettings>
			<Heartbeat Interval="60000"/>
		</PushSettings>
	</Delivery>
	<Query>
		<![CDATA[
			<QueryList>
				<!-- Task scheduler Task Registered (106), Task Registration Deleted (141), Task Deleted (142) -->
				<Query Id="0" Path="Microsoft-Windows-TaskScheduler/Operational">
					<Select Path="Microsoft-Windows-TaskScheduler/Operational">*[System[Provider[@Name='Microsoft-Windows-TaskScheduler'] and (EventID=106 or EventID=141 or EventID=142 )]]</Select>
					<Select Path="System">*[System[Provider[@Name='Microsoft-Windows-TaskScheduler'] and (EventID=106 or EventID=141 or EventID=142 )]]</Select>
				</Query>

				<!-- System startup (12 - includes OS/SP/Version) and shutdown -->
				<Query Id="1" Path="System">
					<Select Path="System">*[System[Provider[@Name='Microsoft-Windows-Kernel-General'] and (EventID=12 or EventID=13)]]</Select>
				</Query>

				<!-- Service Install (7000), service start failure (7045), new service (4697) -->
				<Query Id="2" Path="System">
					<Select Path="System">*[System[Provider[@Name='Service Control Manager'] and (EventID = 7000 or EventID=7045)]]</Select>
					<Select Path="Security">*[System[(EventID=4697)]]</Select>
				</Query>

				<!-- System Time Change (4616) -->
				<Query Id="3" Path="Security">
					<Select Path="Security">*[System[(EventID=4616)]]</Select>
				</Query>

				<!-- Shutdown initiate requests, with user, process and reason (if supplied) -->
				<Query Id="4" Path="System">
					<Select Path="System">*[System[Provider[@Name='USER32'] and (EventID=1074)]]</Select>
				</Query>

				<!-- Registry modified events for Operations: New Registry Value created (%%1904), Existing Registry Value modified (%%1905), Registry Value Deleted (%%1906) -->
				<Query Id="5" Path="Security">
					<Select Path="Security">*[System[(EventID=4657)]] and ((*[EventData[Data[@Name="OperationType"] = "%%1904"]]) or (*[EventData[Data[@Name="OperationType"] = "%%1905"]]) or (*[EventData[Data[@Name="OperationType"] = "%%1906"]]))</Select>
				</Query>

				<!-- Detect User-Mode drivers loaded - for potential BadUSB detection. -->
				<Query Id="6" Path="Microsoft-Windows-DriverFrameworks-UserMode/Operational">
					<Select Path="Microsoft-Windows-DriverFrameworks-UserMode/Operational">*[System[(EventID=2004)]]</Select>
				</Query>

				<!-- Process Create (4688) -->
				<!--<Query Id="7" Path="Security">
					<Select Path="Security">*[System[EventID=4688]]</Select>
				</Query>-->

				<!-- Network Share create (5142), Network Share Delete (5144) -->
				<Query Id="8" Path="Security">
					<Select Path="Security">*[System[(EventID=5142 or EventID=5144)]]</Select>
				</Query>

				<!-- Network share object access without IPC$ and Netlogon shares -->
				<Query Id="9" Path="Security">
					<Select Path="Security">*[System[(EventID=5140)]] and (*[EventData[Data[@Name="ShareName"]!="\\*\IPC$"]]) and (*[EventData[Data[@Name="ShareName"]!="\\*\NetLogon"]])</Select>
				</Query>

				<!-- Wireless Lan 802.1x authentication events with Peer MAC address -->
				<Query Id="10" Path="Security">
					<Select Path="Security">*[System[(EventID=5632)]]</Select>
				</Query>

				<!-- Service logon events if the user account isn't LocalSystem, NetworkService, LocalService -->
				<Query Id="11" Path="Security">
					<Select Path="Security">*[System[(EventID=4624)]] and (*[EventData[Data[@Name="LogonType"]="5"]]) and (*[EventData[Data[@Name="TargetUserSid"] != "S-1-5-18"]]) and (*[EventData[Data[@Name="TargetUserSid"] != "S-1-5-19"]]) and (*[EventData[Data[@Name="TargetUserSid"] != "S-1-5-20"]])</Select>
				</Query>

				<!-- Certificate Services received certificate request (4886), Approved and Certificate issued (4887), Denied request (4888) -->
				<Query Id="12" Path="Security">
					<Select Path="Security">*[System[(EventID=4886 or EventID=4887 or EventID=4888)]]</Select>
				</Query>

				<!-- Application crash/hang events, similar to WER/1001. These include full path to faulting EXE/Module. -->
				<Query Id="13" Path="Application">
					<Select Path="Application">*[System[Provider[@Name='Application Error'] and (EventID=1000)]]</Select>
					<Select Path="Application">*[System[Provider[@Name='Application Hang'] and (EventID=1002)]]</Select>
				</Query>

				<!-- Local logons without network or service events -->
				<Query Id="14" Path="Security">
					<Select Path="Security">*[System[(EventID=4624)]] and (*[EventData[Data[@Name="LogonType"]!="3"]]) and (*[EventData[Data[@Name="LogonType"]!="5"]])</Select>
				</Query>

				<!-- WER events for application crashes only -->
				<Query Id="15" Path="Application">
					<Select Path="Application">*[System[Provider[@Name='Windows Error Reporting']]] and (*[EventData[Data[3] ="APPCRASH"]])</Select>
				</Query>

				<!-- get all UNC/mapped drive successful connection -->
				<Query Id="16" Path="Microsoft-Windows-SMBClient/Operational">
					<Select Path="Microsoft-Windows-SMBClient/Operational">*[System[(EventID=30622 or EventID=30624)]]</Select>
				</Query>

				<!-- PowerShell execute block activity (4103), Remote Command(4104), Start Command(4105), Stop Command(4106) -->
				<Query Id="17" Path="Microsoft-Windows-PowerShell/Operational">
					<Select Path="Microsoft-Windows-PowerShell/Operational">*[System[(EventID=4103 or EventID=4104 or EventID=4105 or EventID=4106)]]</Select>
				</Query>

				<!-- Legacy PowerShell pipeline execution details (800) -->
				<Query Id="18" Path="Windows PowerShell">
					<Select Path="Windows PowerShell">*[System[(EventID=800)]]</Select>
				</Query>
			</QueryList>
		]]>
	</Query>
	<ReadExistingEvents>false</ReadExistingEvents>
	<TransportName>HTTP</TransportName>
	<ContentFormat>RenderedText</ContentFormat>
	<Locale Language="en-US"/>
	<LogFile>ForwardedEvents</LogFile>
	<PublisherName>Microsoft-Windows-EventCollector</PublisherName>
	<AllowedSourceNonDomainComputers></AllowedSourceNonDomainComputers>
	<!-- if you have multiple domains, you will need to get the identifiers of all the domains connecting to your Event Collector and put them below. the easiest way is just to make a new subscription from the GUI and export it, then cut and paste that field in. 
	The SDDL below is just the well known identifiers for "Domain Users" and "Domain Computers" -->                
	<AllowedSourceDomainComputers>O:NSG:BAD:P(A;;GA;;;DC)(A;;GA;;;DD)S:</AllowedSourceDomainComputers>
</Subscription>
